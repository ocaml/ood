name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    strategy:
      fail-fast: false

      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          # - windows-latest

        ocaml-compiler:
          - 4.10.2

    runs-on: ${{ matrix.os }}

    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          dune-cache: ${{ matrix.os != 'macos-latest' }}

      - name: Install Opam packages
        run: opam install . --deps-only --with-test

      - name: Install ocamlformat
        run: opam install ocamlformat.0.19.0
        if: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Check formatting
        run: make fmt
        if: ${{ matrix.os == 'ubuntu-latest' && always() }}

      - name: Run build
        run: opam exec -- dune build --root . --ignore-promoted-rules

      - name: Run the unit tests
        run: opam exec -- dune runtest --root . --ignore-promoted-rules
        timeout-minutes: 1
  v3-ocaml-org:
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout v3.ocaml.org
        uses: actions/checkout@v2
        with:
          repository: 'ocaml/v3.ocaml.org'
      - name: Vendor this ood
        run: |
          cd vendor
          sed -i 's/git checkout \$version/git fetch origin $GITHUB_REF:test-ood \&\& git checkout test-ood/g' update-ood.sh
          ./update-ood.sh
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install and build
        run: |
          make install-deps
          make build
